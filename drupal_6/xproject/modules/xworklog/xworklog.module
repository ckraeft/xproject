<?php
/**
 * Implementation of hook_perm().
 */
function xworklog_perm() {
    return array('create worklog', 'xworklog access');
}

/**
 * Implementation of hook_menu().
 */

function xworklog_menu() {
    $items = array();
    
    $items['xworklog/%xworklog_node/edit'] = array(
    	'title' => 'Edit Worklog',
    	'type' => MENU_LOCAL_TASK,
    	'weight' => 10,
    	'page callback' => 'drupal_get_form',
        'page arguments' => array('xworklog_form', 1),
        'access arguments' => array('create worklog'),
    );
    $items['xworklog/%xworklog_node/delete'] = array(
    	'title' => 'delete Worklog',
    	'type' => MENU_LOCAL_TASK,
    	'weight' => 10,
    	'page callback' => 'drupal_get_form',
        'page arguments' => array('xworklog_confirm_form', 1),
        'access arguments' => array('create worklog'),
    );
	$items['node/%xproject_node/worklog'] = array(
    	'title' => 'Worklogs',
    	'type' => MENU_LOCAL_TASK,
    	'weight' => 10,
    	'page callback' => 'xworklog_page',
        'page arguments' => array(1),
        'access arguments' => array('xproject administration'),
    );
	$items['node/%xproject_node/worklog/%'] = array(
    	'title' => 'Worklogs',
    	'type' => MENU_LOCAL_TASK,
    	'weight' => 10,
    	'page callback' => 'xworklog_page',
        'page arguments' => array(1, 3),
        'access arguments' => array('xproject administration'),
    );
    $items['xtasks/%/worklog'] = array(
    	'title' => 'Worklog',
    	'type' => MENU_LOCAL_TASK,
    	'weight' => 40,
    	'page callback' => 'xworklog_page',
        'access arguments' => array('create tasks'),
    );

	
    return $items;
}

function xworklog_node_load($logid) {
	if (is_numeric($logid)) {
		$node = get_worklog_detail($logid);
            return $node;
        }
	return FALSE;
}

function xworklog_form($form_state, $taskid, $logid = 0) {

    $form['worklog'] = array('#type' => 'fieldset', '#title' => 'Worklog', '#collapsible' => false, '#collapsed' => false);

    if($logid == false)
    {
        global $user;
        $form['xtaskid'] = array('#type' => 'hidden', '#value' => $taskid);
        $form['creator'] = array('#type' => 'hidden', '#value' => $user->uid);
        $xcontactid = 0; // get_default_xcontactid!!!
    } else {
        $data = get_worklog_detail($logid);
        $form['logid'] = array(
            '#type' => 'hidden', 
            '#value' => $logid,
        );
        $form['creator'] = array('#type' => 'hidden', '#value' => $data['creator']);
        $xcontactid = $data['xcontactid'];
    }

    $form['worklog']['hours'] = array(
        '#type' => 'textfield', 
        '#title' => t('Hours'),
		'#default_value' => $data['hours'], 
		'#size' =>6 , 
		'#maxlength' => 16,
        '#required' => TRUE,
        '#prefix' => '<div class="project-field-row">',
    );
    $form['worklog']['xcontactid'] = array(
        '#type' => 'select', 
        '#title' => t('Performed By'), 
        '#options' => xcontact_get_all_contacts(),
		'#default_value' => $xcontactid, 
        '#description' => t('Select Contact'),
    );

	$form['worklog']['dateworked'] = array(
		'#type' => 'date', 
		'#title' => 'Date Worked', 
		'#default_value' => $data['dateworked'], 
		'#description' => '', 
        '#suffix' => '</div><div class="clear"></div>',
    );
    $form['worklog']['notes'] = array(
        '#type' => 'textarea', 
        '#title' => 'Work Details', 
        '#default_value' => $data['notes'], 
        '#rows' => 4, 
        '#required' => false,
        '#description' => t('Notes are optional. You may log just the hours worked if an update is not ready yet.'),
    );

 
    $form['worklog']['submit'] = array('#type' => 'submit', '#value' => t('Save'));
    
    return $form;
}

function xworklog_form_submit($form, &$form_state) {

    $form_state['values']['dateworked'] = xproject_convert_date2string($form_state['values']['dateworked']);
    $form_state['values']['datecreated'] = date('Y-m-d H:i:s'); // xproject_convert_date2string($form_state['values']['datecreated']);

    if(isset($form_state['values']['logid'])) {
		drupal_write_record('xworklog', $form_state['values'],'logid');
		drupal_set_message('Worklog updated');
    } else {
		drupal_write_record('xworklog', $form_state['values']);
    	drupal_set_message('A new Worklog added');
	}
}

function get_worklog_detail($logid)
{
    $sql = 'SELECT * FROM xworklog where logid = '.$logid;
    $result = db_query($sql);
    if($row = db_fetch_array($result))
    {
        $row['dateworked'] = xproject_convert_date2array($row['dateworked']);
                        
    	return $row;
    }
}

function xworklog_confirm_form(){

    return confirm_form(array(),'Are you sure you want to delete this Worklog?',isset($_GET['destination']) ? $_GET['destination'] : "");

}

function xworklog_confirm_form_submit(){
    if(arg(0) == 'xworklog' && arg(2) == 'delete'){
    	$sql = 'DELETE FROM xworklog where logid = ' . arg(1);
    	$result = db_query($sql);
    	if($result)
    		drupal_set_message('Worklog deleted');
    	else
    		drupal_set_message('Error deleting Worklog','error');
    }
}

/**
 * Implementation of hook_theme().
 */
function xworklog_theme() {
    $path = drupal_get_path('module', 'xproject');
    return array(
        'worklog' => array(
            'template' => 'worklog',
            'arguments' => array('worklog' => false, 'worklogform' => false),
            'path' => "$path/theme",
        ),
    );
}


function xworklog_page($projectinfo, $taskid = 0) {
    $sql = 'SELECT * FROM xworklog ORDER BY date_worked DESC';
	$worklog = array();
    /* if argument xprojectid is present then add where clause otherwise list all tasks on this page */

	$worklogform = '';
    
    if($taskid) {
    	$worklogform = drupal_get_form('xworklog_form', $taskid);
        $sql = "SELECT a.* FROM xworklog a, xtasks b WHERE b.taskid = a.xtaskid AND a.taskid = %d";
	    $result = db_query($sql, $taskid);
	} else {
        $sql = "SELECT a.* FROM xworklog a, xtasks b WHERE b.taskid = a.xtaskid AND b.xprojectid = %d";
	    $result = db_query($sql, $projectinfo->nid);
	}

    while($workloginfo = db_fetch_array($result)) {
        $user_data = user_load(array('uid' =>$workloginfo['creator'] ));
		$workloginfo['creatorname'] = $user_data->name;
		$worklog[$workloginfo['logid']] = $workloginfo;
    }
	return theme('worklog', $worklog, $worklogform);
}
?>