<?php

/**
* Implementation of hook_install().
*/
function xtasks_install() {
    drupal_install_schema('xtasks');
}


function xtasks_uninstall() {
    drupal_uninstall_schema('xtasks');
}

/**
 * Definition of hook_schema();
 */
function xtasks_schema() {
  $schema = array();
    
  $schema['xtasks'] = array(
    'description'     => 'Stores information about each task.',
    'fields'          => array(
      'taskid'             => array(
        'description'     => "The task's id.",
        'type'            => 'serial',
        'size'            => 'normal',
        'not null'        => TRUE,
      ),
      'xprojectid'             => array(
        'description'     => "The task's project id.",
        'type'            => 'int',
        'size'            => 'normal',
        'not null'        => TRUE,
      ),
      'tpl_taskid'        => array(
        'description'     => 'The template task this task was created from',
        'type'            => 'int',
        'size'            => 'normal',
        'not null'        => TRUE,
        'default'         => 0,
      ),
      'parent_taskid'        => array(
        'description'     => '',
        'type'            => 'int',
        'size'            => 'normal',
        'not null'        => TRUE,
        'default'         => 0,
      ),
      'dependency_taskid' => array(
        'description'     => '',
        'type'            => 'int',
        'size'            => 'normal',
        'not null'        => TRUE,
        'default'         => 0,
      ),
      'offset_days' => array(
        'description'     => '',
        'type'            => 'int',
        'size'            => 'normal',
        'not null'        => TRUE,
        'default'         => 0,
      ),
      'department'        => array(
        'description'     => '',
        'type'            => 'int',
        'size'            => 'normal',
        'not null'        => TRUE,
        'default'         => 0,
      ),
      'owner'        => array(
        'description'     => '',
        'type'            => 'int',
        'size'            => 'tiny',
        'not null'        => TRUE,
        'default'         => 0,
      ),
      'assigned_to'        => array(
        'description'     => '',
        'type'            => 'int',
        'size'            => 'normal',
        'not null'        => TRUE,
        'default'         => 0,
      ),
      'assigned_by'        => array(
        'description'     => '',
        'type'            => 'int',
        'size'            => 'normal',
        'not null'        => TRUE,
        'default'         => 0,
      ),
      'taskname'           => array(
        'description'     => '',
        'type'            => 'varchar',
        'length'          => 255,
        'not null'        => FALSE,
      ),
      'tasktype'           => array(
        'description'     => '',
        'type'            => 'varchar',
        'length'          => 32,
        'not null'        => FALSE,
      ),
      'taskdetails'           => array(
        'description'     => '',
		'type'            => 'text',
        'not null'        => TRUE,
        'size'            => 'big',
      ),
      'taskstatus'           => array(
        'description'     => '',
        'type'            => 'varchar',
        'length'          => 255,
        'not null'        => FALSE,
      ),
      'taskimportance'        => array(
        'description'     => '',
        'type'            => 'int',
        'size'            => 'tiny',
        'not null'        => TRUE,
        'default'         => 0,
      ),
      'taskpriority'        => array(
        'description'     => '',
        'type'            => 'int',
        'size'            => 'tiny',
        'not null'        => TRUE,
        'default'         => 0,
      ),
      'taskorder'             => array(
        'description'     => '',
        'type'            => 'varchar',
        'length'          => 32,
        'not null'        => FALSE,
      ),
      'taskprivate'             => array(
        'description'     => '',
        'type'            => 'int',
        'size'            => 'tiny',
        'not null'        => TRUE,
        'default'         => 0,
      ),
      'has_attachments'   => array(
        'description'     => '',
        'type'            => 'int',
        'size'            => 'tiny',
        'not null'        => TRUE,
        'default'         => 0,
      ),
      'hours_planned'     => array(
        'description'     => '',
        'type'            => 'int',
        'size'            => 'tiny',
        'not null'        => TRUE,
        'default'         => 0,
      ),
      'hours_spent'       => array(
        'description'     => '',
        'type'            => 'float',
        'disp-width'      => '8',
        'not null'        => TRUE,
        'default'         => 0,
      ),
      'hours_remaining'   => array(
        'description'     => '',
        'type'            => 'int',
        'size'            => 'tiny',
        'not null'        => TRUE,
        'default'         => 0,
      ),
      'date_approved'=> array(
        'description'     => '',
        'type'            => 'datetime',
        'not null'        => TRUE,
        'default'         => 0,
      ),
      'planned_start_date'=> array(
        'description'     => '',
        'type'            => 'datetime',
        'not null'        => TRUE,
        'default'         => 0,
      ),
      'planned_end_date'  => array(
        'description'     => '',
        'type'            => 'datetime',
        'not null'        => TRUE,
        'default'         => 0,
      ),
      'actual_start_date' => array(
        'description'     => '',
        'type'            => 'datetime',
        'not null'        => TRUE,
        'default'         => 0,
      ),
      'actual_end_date'   => array(
        'description'     => '',
        'type'            => 'datetime',
        'not null'        => TRUE,
        'default'         => 0,
      ),
    ),
    'primary key'       => array('taskid'),
  );

  return $schema;
}

function xtasks_update_6004() {

  $ret = array();

    $ret[] = update_sql('ALTER TABLE {xtasks} CHANGE hours_spent hours_spent FLOAT(6,2) NOT NULL');
//  db_change_column(&$ret, 'xtasks', 'hours_spent', 'hours_spent', array('type' => 'float', 'not null' => true));

  return $ret;


}

function xtasks_update_6005() {

  $ret = array();

    $ret[] = update_sql('ALTER TABLE {xtasks} ADD has_attachments TINYINT(1) NOT NULL');
//  db_change_column(&$ret, 'xtasks', 'hours_spent', 'hours_spent', array('type' => 'float', 'not null' => true));

  return $ret;


}

function xtasks_update_6007() {

    $ret = array();
    
    $ret[] = update_sql('ALTER TABLE {xtasks} ADD department INT(8) NOT NULL');
    
    return $ret;


}

function xtasks_update_6008() {
    $ret = array();
    
    $result = db_query("SELECT a.taskid, a.xprojectid FROM xtasks a LEFT JOIN xtasks b ON b.taskid = a.parent_taskid WHERE b.taskid IS NULL AND a.parent_taskid != 0");
    $ttl_updated_tasks = 0;
    $ttl_deleted_tasks = 0;
    $projectlist = array();
    while($row = db_fetch_array($result)) {
        if(!isset($projectlist[$row['xprojectid']])) {
            $projectlist[$row['xprojectid']] = node_load($row['xprojectid']);
            
            if($projectlist[$row['xprojectid']] == false) {
                if($result2 = db_query("DELETE FROM xtasks WHERE taskid = %d", $row['taskid'])) {
                    $ttl_deleted_tasks++;
                }
            } else {
                // project exists and was added to stack successfully
                if($result2 = db_query("UPDATE xtasks SET parent_taskid = 0 WHERE taskid = %d", $row['taskid'])) {
                    $ttl_updated_tasks++;
                }
            }
        } else {
            // project exists and was found in the stack
            if($result2 = db_query("UPDATE xtasks SET parent_taskid = 0 WHERE taskid = %d", $row['taskid'])) {
                $ttl_updated_tasks++;
            }
        }
    }
    
    if($ttl_updated_tasks > 0) {
        $ret[] = $x.' xTasks were found with parent task references to non-existing tasks and were set as top level tasks';     
    }
    
    if($ttl_deleted_tasks > 0) {
        $ret[] = $x.' xTasks were found without projects and deleted';     
    }

    return $ret;
}

function xtasks_update_6009() {

    $ret = array();
    
    $ret[] = update_sql('ALTER TABLE {xtasks} ADD taskorder VARCHAR(32) NOT NULL');
    
    return $ret;


}

?>